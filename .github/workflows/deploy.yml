name: Deploy VitePress site to Pages

on:
  push:
    branches: [main]  # 触发部署的分支

permissions:
  contents: write   # 给 GitHub Actions 写入仓库内容的权限
  pages: write      # 给 GitHub Actions 写入 GitHub Pages 的权限
  id-token: write   # 给 GitHub Actions 获取身份令牌的权限

concurrency:
  group: pages
  cancel-in-progress: false  # 允许同时进行一次部署，不会取消当前进行中的部署

jobs:
  # 构建工作
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整的 Git 历史
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # 指定 Node.js 版本
          cache: npm  # 缓存 npm 依赖
      - name: Install dependencies
        run: npm install --frozen-lockfile  # 安装依赖
      - name: Ensure vitepress is executable
        run: chmod +x node_modules/.bin/vitepress  # 给 vitepress 文件添加执行权限
      - name: Build with VitePress
        run: |
          npm run docs:build  # 执行构建命令
          touch .nojekyll  # 防止 GitHub Pages 使用 Jekyll 处理站点
      - name: Check if build directory exists
        run: |
          if [ -d ".vitepress/dist" ]; then echo "Build directory exists"; else echo "Build directory does not exist"; fi
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3  # 更新为 v3
        with:
          path: .vitepress/dist  # 更正为正确的构建产物目录

  # 部署工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}  # 获取部署后的页面 URL
    needs: build  # 在构建完成后再进行部署
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4  # 更新为 v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub 自动生成的 token
